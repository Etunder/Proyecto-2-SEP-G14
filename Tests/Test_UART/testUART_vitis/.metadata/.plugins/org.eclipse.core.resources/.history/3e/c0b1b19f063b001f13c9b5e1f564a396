#include <stdio.h>
#include "xparameters.h"
#include "xsdps.h"
#include "xil_printf.h"
#include "ff.h"
#include "xil_cache.h"

#define SD_DEVICE_ID    XPAR_XSDPS_0_DEVICE_ID
#define BUFFER_SIZE     64  // Buffer for 64 FP32 values

static int SdInit(void);
static int ReadFirstFileFromSD(float* Buffer, UINT BufferSize);

XSdPs SdInstance;

int main(void) {
    int Status;
    float Buffer[BUFFER_SIZE];

    Status = SdInit();
    if (Status != XST_SUCCESS) {
        xil_printf("SD Initialization failed \r\n");
        return XST_FAILURE;
    }

    Status = ReadFirstFileFromSD(Buffer, BUFFER_SIZE);
    if (Status != XST_SUCCESS) {
        xil_printf("Failed to read file from SD card \r\n");
        return XST_FAILURE;
    }

    return XST_SUCCESS;
}

static int SdInit(void) {
    int Status;
    XSdPs_Config *SdConfig;

    SdConfig = XSdPs_LookupConfig(SD_DEVICE_ID);
    if (NULL == SdConfig) {
        return XST_FAILURE;
    }

    Status = XSdPs_CfgInitialize(&SdInstance, SdConfig, SdConfig->BaseAddress);
    if (Status != XST_SUCCESS) {
        return XST_FAILURE;
    }

    Status = XSdPs_CardInitialize(&SdInstance);
    if (Status != XST_SUCCESS) {
        return XST_FAILURE;
    }

    return XST_SUCCESS;
}

static int ReadFirstFileFromSD(float* Buffer, UINT BufferSize) {
    FRESULT Res;
    FATFS FatFs;
    DIR Dir;
    FILINFO Finfo;
    FIL Fil;
    UINT BytesRead;
    TCHAR *Path = "0:/";
    char Filename[256];

    xil_printf("Mounting filesystem...\r\n");
    // Mount the filesystem
    Res = f_mount(&FatFs, Path, 0);
    if (Res != FR_OK) {
        xil_printf("Failed to mount filesystem: %d\r\n", Res);
        return XST_FAILURE;
    }

    xil_printf("Opening directory: %s\r\n", Path);
    // Open the directory
    Res = f_opendir(&Dir, Path);
    if (Res != FR_OK) {
        xil_printf("Failed to open directory: %d\r\n", Res);
        f_mount(NULL, Path, 0);
        return XST_FAILURE;
    }

    // Read the first file
    Res = f_readdir(&Dir, &Finfo);
    if (Res != FR_OK || Finfo.fname[0] == 0) {
        xil_printf("No files found in directory or error reading directory\r\n");
        f_closedir(&Dir);
        f_mount(NULL, Path, 0);
        return XST_FAILURE;
    }

    xil_printf("First file found: %s\r\n", Finfo.fname);
    strcpy(Filename, Finfo.fname);

    // Close the directory
    f_closedir(&Dir);

    xil_printf("Opening file: %s\r\n", Filename);
    // Open the file
    Res = f_open(&Fil, Filename, FA_READ);
    if (Res != FR_OK) {
        xil_printf("Failed to open file: %d\r\n", Res);
        f_mount(NULL, Path, 0);
        return XST_FAILURE;
    }

    xil_printf("Reading file content...\r\n");
    // Read the file content into the buffer
    Res = f_read(&Fil, Buffer, BufferSize * sizeof(float), &BytesRead);
    if (Res != FR_OK || BytesRead != BufferSize * sizeof(float)) {
        xil_printf("Failed to read file: %d\r\n", Res);
        f_close(&Fil);
        f_mount(NULL, Path, 0);
        return XST_FAILURE;
    }

    // Close the file
    f_close(&Fil);

    // Unmount the filesystem
    f_mount(NULL, Path, 0);

    xil_printf("File read successfully.\r\n");

    return XST_SUCCESS;
}
